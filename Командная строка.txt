
chmod +x check.sh # эта команда сделает файл исполняемым
./check.sh # эта команда исполнит скрипт

$ echo "Привет!" - выводит в консоль
echo "Вторая строка файла" >> file.txt //запись в файл
echo "Новая строка" > file.txt //Одинарный символ > тоже перенаправит вывод команды в файл, но перед этим сотрёт содержимое файла, то есть перезапишет файл целиком


clip < ~/.ssh/id_rsa.pub - скопировать содержимое файла

pwd - показывает в каком месте сейчас нахожусь

cd ~ - перейти в домашнюю категорию

ls - отображает содержимое
ls -a - вывести расширенный список
А ещё, как и другие команды, ls может работать с символом домашней директории (~) и предыдущей директории (..)

Обратите внимание: если в названии папки есть пробелы, при вводе нужно использовать кавычки

.. - перейти на уровень назад

touch my-new-file.txt - создали файл my-new-file.txt в текущей директории
touch first-project/data.txt - в другой директории
touch first-project/data.txt first-project/table.csv - несколько файлов в директории


mkdir new-dir - создали директорию new-dir //папку
mkdir -p dir1/dir-inside/dir-deeper-inside - создать папку в папке

Также можно использовать обе команды вместе с символом домашней директории (~) или родительской директории (..). Например, команда mkdir ~/my-git-projects создаст папку my-git-projects внутри домашней директории.
А команда touch ../../file.txt создаст файл file.txt на две папки выше по иерархии. Допустим, если вы находитесь в директории projects/git/hello, команда touch ../../file.txt создаст файл по такому пути: projects/file.txt

cp что_копируем куда_копируем - копирование - cp index.html src/
cp что_копируем что_копируем что_копируем куда_копируем - множественное копирование

mv table.csv ./very-important-files - переместить файл в папку

cat - прочитать файл //работает только с текстовыми файлами

rm example.txt -  удалить файл
rmdir images - команда удалит папку //Если в папке, которую вы пытаетесь стереть, есть какие-то файлы, то командная строка не удалит её и выведет сообщение о том, что папка не пуста
rm -r images - удалить папку вместе со всем

Практика:

Подберите к каждой ситуации правильную команду.
Скопировать файлы file.txt и me.png в директорию important-files внутри домашней директории
cp file.txt me.png ~/important-files
Здесь нужна команда, название которой образовано от copy.
Переместить файлы file.txt из родительской директории и me.png из текущей директории в папку important-files в рабочей директории
mv ../file.txt me.png important-files
Здесь поможет команда, чьё название образовано от move.
Создать файл file.txt в директории important-files, которая находится на один уровень выше текущей рабочей директории, и файл me.png в текущей рабочей директории
touch ../important-files/file.txt me.png
В переводе с английского название команды означает «коснуться».

//Советы
Выполняйте сразу несколько команд
Команды в терминале необязательно вбивать и выполнять по очереди. Их можно указывать не по одной, а сразу списком. Для этого их нужно разделить двумя амперсандами (&&).
$ mkdir second-project && cd second-project && touch index.html style.css
# создаём папку second-project,
# переходим в папку second-project
# и создаём в ней два файла: index.html и style.css 


